// Copyright 2021 Freemework Team

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at

// 	http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


// ============================================================================================================================
//
// Auto-generated by
//
// https://github.com/freemework/enum.currency/generator/templates/csharp/Freemework.Enum.Currency.EntityFramework.cs.mustache
//
// ============================================================================================================================

namespace Freemework.Enum.Currency.EntityFramework
{
	using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

	public static class Converters
	{
		public static ValueConverter<Currency, string> CurrencyConverter = new ValueConverter<Currency, string>(
			vToDb => vToDb.Code,
			vFromDb => Currency.Parse(vFromDb)
		);

		public static ValueConverter<Currency?, string?> CurrencyNullableConverter = new ValueConverter<Currency?, string?>(
			vToDb => vToDb != null ? vToDb.Code : null,
			vFromDb => vFromDb != null ? Currency.Parse(vFromDb) : null
		);


		public static ValueConverter<CurrencyCrypto, string> CurrencyCryptoConverter = new ValueConverter<CurrencyCrypto, string>(
			vToDb => vToDb.Code,
			vFromDb => CurrencyCrypto.Parse(vFromDb)
		);

		public static ValueConverter<CurrencyCrypto?, string?> CurrencyCryptoNullableConverter = new ValueConverter<CurrencyCrypto?, string?>(
			vToDb => vToDb != null ? vToDb.Code : null,
			vFromDb => vFromDb != null ? CurrencyCrypto.Parse(vFromDb) : null
		);


		public static ValueConverter<CurrencyFiat, string> CurrencyFiatConverter = new ValueConverter<CurrencyFiat, string>(
			vToDb => vToDb.Code,
			vFromDb => CurrencyFiat.Parse(vFromDb)
		);

		public static ValueConverter<CurrencyFiat?, string?> CurrencyFiatNullableConverter = new ValueConverter<CurrencyFiat?, string?>(
			vToDb => vToDb != null ? vToDb.Code : null,
			vFromDb => vFromDb != null ? CurrencyFiat.Parse(vFromDb) : null
		);


		public static ValueConverter<CurrencyIso4217, string> CurrencyIso4217Converter = new ValueConverter<CurrencyIso4217, string>(
			vToDb => vToDb.Code,
			vFromDb => CurrencyIso4217.Parse(vFromDb)
		);

		public static ValueConverter<CurrencyIso4217?, string?> CurrencyIso4217NullableConverter = new ValueConverter<CurrencyIso4217?, string?>(
			vToDb => vToDb != null ? vToDb.Code : null,
			vFromDb => vFromDb != null ? CurrencyIso4217.Parse(vFromDb) : null
		);
	}
}